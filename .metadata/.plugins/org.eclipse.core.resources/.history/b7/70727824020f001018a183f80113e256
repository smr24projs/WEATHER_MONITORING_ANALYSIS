//package com.example.weather.ui;
//
//import javafx.application.Application;
//import javafx.scene.Scene;
//import javafx.scene.control.Label;
//import javafx.scene.layout.VBox;
//import javafx.stage.Stage;
//
//public class WeatherMonitoringUI extends Application {
//
//    @Override
//    public void start(Stage primaryStage) {
//        VBox root = new VBox();
//        root.getChildren().add(new Label("üå§ Welcome to the Weather Monitoring System!"));
//
//        Scene scene = new Scene(root, 400, 300);
//        primaryStage.setTitle("Weather Monitoring System");
//        primaryStage.setScene(scene);
//        primaryStage.show();
//    }
//
//    public static void main(String[] args) {
//        launch(args);
//    }
//}

//package com.example.weather.ui;
//
//import javafx.application.Application;
//import javafx.application.Platform;
//import javafx.scene.Scene;
//import javafx.scene.chart.LineChart;
//import javafx.scene.chart.NumberAxis;
//import javafx.scene.chart.XYChart;
//import javafx.scene.control.Button;
//import javafx.scene.control.Label;
//import javafx.scene.layout.VBox;
//import javafx.stage.Stage;
//import org.json.JSONObject;
//
//import java.io.BufferedReader;
//import java.io.InputStreamReader;
//import java.net.HttpURLConnection;
//import java.net.URL;
//import java.util.Timer;
//import java.util.TimerTask;
//
//public class WeatherMonitoringUI extends Application {
//
//    private Label weatherLabel;
//    private XYChart.Series<Number, Number> temperatureSeries;
//    private int timeCounter = 0;  // X-axis time counter
//
//    @Override
//    public void start(Stage primaryStage) {
//        VBox root = new VBox();
//
//        // Weather Label
//        weatherLabel = new Label("üå§ Weather data will appear here...");
//
//        // Refresh Button
//        Button refreshButton = new Button("Refresh Weather");
//        refreshButton.setOnAction(e -> fetchWeatherData());
//
//        // Temperature Chart
//        NumberAxis xAxis = new NumberAxis();
//        NumberAxis yAxis = new NumberAxis();
//        xAxis.setLabel("Time (seconds)");
//        yAxis.setLabel("Temperature (¬∞C)");
//
//        LineChart<Number, Number> temperatureChart = new LineChart<>(xAxis, yAxis);
//        temperatureChart.setTitle("Temperature Trend");
//
//        temperatureSeries = new XYChart.Series<>();
//        temperatureSeries.setName("Temperature");
//        temperatureChart.getData().add(temperatureSeries);
//
//        root.getChildren().addAll(weatherLabel, refreshButton, temperatureChart);
//
//        Scene scene = new Scene(root, 600, 400);
//        primaryStage.setTitle("Weather Monitoring System");
//        primaryStage.setScene(scene);
//        primaryStage.show();
//
//        // Start fetching weather data automatically every 5 seconds
//        startRealTimeUpdates();
//    }
//
//    private void fetchWeatherData() {
//        new Thread(() -> {
//            try {
//                String apiUrl = "http://localhost:8080/weather";  // Change this to your actual API endpoint
//                URL url = new URL(apiUrl);
//                HttpURLConnection conn = (HttpURLConnection) url.openConnection();
//                conn.setRequestMethod("GET");
//
//                BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
//                StringBuilder response = new StringBuilder();
//                String line;
//
//                while ((line = reader.readLine()) != null) {
//                    response.append(line);
//                }
//                reader.close();
//
//                // Parse JSON response
//                JSONObject json = new JSONObject(response.toString());
//                String temperature = json.getString("temperature");
//                String humidity = json.getString("humidity");
//                double tempValue = Double.parseDouble(temperature);
//
//                // Update UI
//                Platform.runLater(() -> {
//                    weatherLabel.setText("üå° Temperature: " + temperature + "¬∞C\nüíß Humidity: " + humidity + "%");
//                    updateChart(tempValue);
//                });
//
//            } catch (Exception e) {
//                e.printStackTrace();
//                Platform.runLater(() -> weatherLabel.setText("‚ö† Error fetching weather data!"));
//            }
//        }).start();
//    }
//
//    private void updateChart(double temperature) {
//        if (temperatureSeries.getData().size() > 20) {
//            temperatureSeries.getData().remove(0); // Keep only the last 20 data points
//        }
//        temperatureSeries.getData().add(new XYChart.Data<>(timeCounter++, temperature));
//    }
//
//    private void startRealTimeUpdates() {
//        Timer timer = new Timer();
//        timer.scheduleAtFixedRate(new TimerTask() {
//            @Override
//            public void run() {
//                fetchWeatherData();
//            }
//        }, 0, 5000);  // Fetch data every 5 seconds
//    }
//
//    public static void main(String[] args) {
//        launch(args);
//    }
//}



//package com.example.weather.ui;
//
//import javafx.application.Application;
//import javafx.application.Platform;
//import javafx.scene.Scene;
//import javafx.scene.control.Label;
//import javafx.scene.control.Button;
//import javafx.scene.layout.VBox;
//import javafx.stage.Stage;
//import org.json.JSONObject;
//import java.io.BufferedReader;
//import java.io.InputStreamReader;
//import java.net.HttpURLConnection;
//import java.net.URL;
//import org.json.JSONObject;
//import java.io.BufferedReader;
//import java.io.InputStreamReader;
//import java.net.HttpURLConnection;
//import java.net.URL;
//import javafx.geometry.Pos;
//
//
//public class WeatherMonitoringUI extends Application {
//
//    private static final String API_KEY = "6e1a202fdcb54fcb42c67944d7fa6671"; // Replace with your API key
//    private static final String CITY = "Pune"; // Change to your preferred city
//    private static final String API_URL = "https://api.openweathermap.org/data/2.5/weather?q=" + CITY + "&appid=" + API_KEY + "&units=metric";
//
//    private Label weatherLabel;
//
//    @Override
//    public void start(Stage primaryStage) {
//        weatherLabel = new Label("Fetching weather data...");
//        Button refreshButton = new Button("Refresh Weather");
//        refreshButton.setOnAction(e -> fetchWeatherData());
//
//        VBox root = new VBox(10, weatherLabel, refreshButton);
//        root.setAlignment(Pos.CENTER);
//        Scene scene = new Scene(root, 400, 300);
//        primaryStage.setTitle("Weather Monitoring System");
//        primaryStage.setScene(scene);
//        primaryStage.show();
//
//        fetchWeatherData(); // Fetch on startup
//    }
//
//    private void fetchWeatherData() {
//        new Thread(() -> {
//            try {
//                URL url = new URL(API_URL);
//                HttpURLConnection conn = (HttpURLConnection) url.openConnection();
//                conn.setRequestMethod("GET");
//
//                BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
//                StringBuilder response = new StringBuilder();
//                String line;
//                while ((line = reader.readLine()) != null) {
//                    response.append(line);
//                }
//                reader.close();
//
//                JSONObject json = new JSONObject(response.toString());
//                String weatherDescription = json.getJSONArray("weather").getJSONObject(0).getString("description");
//                double temperature = json.getJSONObject("main").getDouble("temp");
//
//                Platform.runLater(() -> weatherLabel.setText("üå§ " + CITY + ": " + temperature + "¬∞C, " + weatherDescription));
//
//            } catch (Exception e) {
//                e.printStackTrace();
//                Platform.runLater(() -> weatherLabel.setText("‚ö†Ô∏è Error fetching weather data!"));
//            }
//        }).start();
//    }
//
//    public static void main(String[] args) {
//        launch(args);
//    }
//}
//


//package com.example.weather.ui;
//
//import javafx.application.Application;
//import javafx.application.Platform;
//import javafx.scene.Scene;
//import javafx.scene.chart.LineChart;
//import javafx.scene.chart.NumberAxis;
//import javafx.scene.chart.XYChart;
//import javafx.scene.control.Button;
//import javafx.scene.control.Label;
//import javafx.scene.layout.VBox;
//import javafx.stage.Stage;
//import org.json.JSONObject;
//
//import java.io.BufferedReader;
//import java.io.InputStreamReader;
//import java.net.HttpURLConnection;
//import java.net.URL;
//import java.util.concurrent.atomic.AtomicInteger;
//
//public class WeatherMonitoringUI extends Application {
//
//    private Label tempLabel = new Label("Temperature: Loading...");
//    private Label humidityLabel = new Label("Humidity: Loading...");
//    private Label windSpeedLabel = new Label("Wind Speed: Loading...");
//    private XYChart.Series<Number, Number> tempSeries = new XYChart.Series<>();
//    private AtomicInteger timeStep = new AtomicInteger(0);
//
//    @Override
//    public void start(Stage primaryStage) {
//        VBox root = new VBox(10);
//
//        // Weather Data Labels
//        root.getChildren().addAll(tempLabel, humidityLabel, windSpeedLabel);
//
//        // Fetch Data Button
//        Button fetchWeatherButton = new Button("Fetch Weather Data");
//        fetchWeatherButton.setOnAction(e -> fetchWeatherData());
//        root.getChildren().add(fetchWeatherButton);
//
//        // Line Chart for Temperature Trends
//        NumberAxis xAxis = new NumberAxis();
//        NumberAxis yAxis = new NumberAxis();
//        xAxis.setLabel("Time");
//        yAxis.setLabel("Temperature (¬∞C)");
//        LineChart<Number, Number> tempChart = new LineChart<>(xAxis, yAxis);
//        tempSeries.setName("Temperature Trend");
//        tempChart.getData().add(tempSeries);
//        root.getChildren().add(tempChart);
//
//        // Set Scene
//        Scene scene = new Scene(root, 500, 400);
//        primaryStage.setTitle("Weather Monitoring System");
//        primaryStage.setScene(scene);
//        primaryStage.show();
//    }
//
//    private void fetchWeatherData() {
//        new Thread(() -> {
//            try {
//                // Replace with your OpenWeatherMap API key
//                String apiKey = "6e1a202fdcb54fcb42c67944d7fa6671";
//                String city = "Pune"; // Change to your preferred location
//                String urlString = "https://api.openweathermap.org/data/2.5/weather?q=" + city + "&appid=" + apiKey + "&units=metric";
//
//                URL url = new URL(urlString);
//                HttpURLConnection conn = (HttpURLConnection) url.openConnection();
//                conn.setRequestMethod("GET");
//
//                BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
//                StringBuilder response = new StringBuilder();
//                String line;
//                while ((line = reader.readLine()) != null) {
//                    response.append(line);
//                }
//                reader.close();
//
//                // Parse JSON Response
//                JSONObject jsonResponse = new JSONObject(response.toString());
//                double temperature = jsonResponse.getJSONObject("main").getDouble("temp");
//                int humidity = jsonResponse.getJSONObject("main").getInt("humidity");
//                double windSpeed = jsonResponse.getJSONObject("wind").getDouble("speed");
//
//                // Update UI on JavaFX Thread
//                Platform.runLater(() -> {
//                    tempLabel.setText("Temperature: " + temperature + "¬∞C");
//                    humidityLabel.setText("Humidity: " + humidity + "%");
//                    windSpeedLabel.setText("Wind Speed: " + windSpeed + " m/s");
//
//                    // Add Data to Chart
//                    tempSeries.getData().add(new XYChart.Data<>(timeStep.incrementAndGet(), temperature));
//                });
//
//            } catch (Exception e) {
//                e.printStackTrace();
//                Platform.runLater(() -> tempLabel.setText("Error fetching data!"));
//            }
//        }).start();
//    }
//
//    public static void main(String[] args) {
//        launch(args);
//    }
//}

//package com.example.weather.ui;
//
//import javafx.application.Application;
//import javafx.application.Platform;
//import javafx.scene.Scene;
//import javafx.scene.chart.BarChart;
//import javafx.scene.chart.CategoryAxis;
//import javafx.scene.chart.NumberAxis;
//import javafx.scene.chart.XYChart;
//import javafx.scene.control.Button;
//import javafx.scene.control.Label;
//import javafx.scene.layout.VBox;
//import javafx.stage.Stage;
//import org.json.JSONObject;
//
//import java.io.BufferedReader;
//import java.io.InputStreamReader;
//import java.net.HttpURLConnection;
//import java.net.URL;
//import java.util.Timer;
//import java.util.TimerTask;
//
//public class WeatherMonitoringUI extends Application {
//    private static final String API_KEY = "6e1a202fdcb54fcb42c67944d7fa6671";
//    private static final String CITY = "Pune";
//    private static final String URL_TEMPLATE = "https://api.openweathermap.org/data/2.5/weather?q=" + CITY + "&appid=" + API_KEY + "&units=metric";
//
//    private Label temperatureLabel;
//    private Label humidityLabel;
//    private Label pressureLabel;
//    private Label cloudCoverLabel;
//    private BarChart<String, Number> weatherChart;
//    private XYChart.Series<String, Number> series;
//
//    @Override
//    public void start(Stage primaryStage) {
//        temperatureLabel = new Label("Temperature: Loading...");
//        humidityLabel = new Label("Humidity: Loading...");
//        pressureLabel = new Label("Pressure: Loading...");
//        cloudCoverLabel = new Label("Cloud Cover: Loading...");
//        
//        Button refreshButton = new Button("Refresh Weather Data");
//        refreshButton.setOnAction(event -> fetchWeatherData());
//
//        CategoryAxis xAxis = new CategoryAxis();
//        xAxis.setLabel("Time");
//        NumberAxis yAxis = new NumberAxis();
//        yAxis.setLabel("Temperature (¬∞C)");
//
//        weatherChart = new BarChart<>(xAxis, yAxis);
//        weatherChart.setTitle("Temperature Trends");
//        series = new XYChart.Series<>();
//        series.setName("Temperature");
//        weatherChart.getData().add(series);
//
//        VBox root = new VBox(10, temperatureLabel, humidityLabel, pressureLabel, cloudCoverLabel, refreshButton, weatherChart);
//        Scene scene = new Scene(root, 600, 400);
//
//        primaryStage.setTitle("Weather Monitoring System");
//        primaryStage.setScene(scene);
//        primaryStage.show();
//
//        startAutoUpdate();
//        fetchWeatherData();
//    }
//
//    private void fetchWeatherData() {
//        new Thread(() -> {
//            try {
//                URL url = new URL(URL_TEMPLATE);
//                HttpURLConnection conn = (HttpURLConnection) url.openConnection();
//                conn.setRequestMethod("GET");
//                BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
//                StringBuilder response = new StringBuilder();
//                String line;
//                while ((line = reader.readLine()) != null) {
//                    response.append(line);
//                }
//                reader.close();
//                parseWeatherData(response.toString());
//            } catch (Exception e) {
//                e.printStackTrace();
//            }
//        }).start();
//    }
//
//    private void parseWeatherData(String jsonData) {
//        JSONObject json = new JSONObject(jsonData);
//        double temperature = json.getJSONObject("main").getDouble("temp");
//        int humidity = json.getJSONObject("main").getInt("humidity");
//        int pressure = json.getJSONObject("main").getInt("pressure");
//        int cloudCover = json.getJSONObject("clouds").getInt("all");
//
//        Platform.runLater(() -> {
//            temperatureLabel.setText("Temperature: " + temperature + " ¬∞C");
//            humidityLabel.setText("Humidity: " + humidity + "%");
//            pressureLabel.setText("Pressure: " + pressure + " hPa");
//            cloudCoverLabel.setText("Cloud Cover: " + cloudCover + "%");
//            updateChart(temperature);
//        });
//    }
//
//    private void updateChart(double temperature) {
//        series.getData().add(new XYChart.Data<>(String.valueOf(System.currentTimeMillis()), temperature));
//        if (series.getData().size() > 10) {
//            series.getData().remove(0);
//        }
//    }
//
//    private void startAutoUpdate() {
//        Timer timer = new Timer(true);
//        timer.scheduleAtFixedRate(new TimerTask() {
//            @Override
//            public void run() {
//                fetchWeatherData();
//            }
//        }, 0, 30000); // Update every 30 seconds
//    }
//
//    public static void main(String[] args) {
//        launch(args);
//    }
//}

//package com.example.weather.ui;
//
//import javafx.application.Application;
//import javafx.geometry.Insets;
//import javafx.scene.Scene;
//import javafx.scene.chart.*;
//import javafx.scene.control.*;
//import javafx.scene.layout.VBox;
//import javafx.stage.Stage;
//import org.json.JSONObject;
//import java.io.IOException;
//import java.net.HttpURLConnection;
//import java.net.URL;
//import java.util.Scanner;
//
//public class WeatherMonitoringUI extends Application {
//    private ComboBox<String> citySelector;
//    private Label temperatureLabel;
//    private Label humidityLabel;
//    private BarChart<String, Number> barChart;
//    private LineChart<Number, Number> lineChart;
//
//    @Override
//    public void start(Stage primaryStage) {
//        // City selection dropdown
//        citySelector = new ComboBox<>();
//        citySelector.getItems().addAll("New York", "London", "Tokyo", "Mumbai", "Sydney");
//        citySelector.setValue("New York");
//
//        // Button to fetch weather data
//        Button fetchButton = new Button("Fetch Weather");
//        fetchButton.setOnAction(e -> fetchWeatherData(citySelector.getValue()));
//
//        // Labels for displaying temperature and humidity
//        temperatureLabel = new Label("Temperature: --");
//        humidityLabel = new Label("Humidity: --");
//
//        // Bar Chart for displaying weather data
//        CategoryAxis xAxis = new CategoryAxis();
//        NumberAxis yAxis = new NumberAxis();
//        barChart = new BarChart<>(xAxis, yAxis);
//        barChart.setTitle("Weather Data");
//
//        // Line Chart for displaying temperature trends
//        NumberAxis lineXAxis = new NumberAxis();
//        NumberAxis lineYAxis = new NumberAxis();
//        lineChart = new LineChart<>(lineXAxis, lineYAxis);
//        lineChart.setTitle("Temperature Trends");
//
//        // Layout for the UI components
//        VBox layout = new VBox(10, citySelector, fetchButton, temperatureLabel, humidityLabel, barChart, lineChart);
//        layout.setPadding(new Insets(10));
//
//        // Set the scene and show the primary stage
//        primaryStage.setScene(new Scene(layout, 600, 500));
//        primaryStage.setTitle("Weather Monitoring System");
//        primaryStage.show();
//
//        // Initial fetch for New York data
//        fetchWeatherData(citySelector.getValue());
//    }
//
//    private void fetchWeatherData(String city) {
//        try {
//            String apiKey = "6e1a202fdcb54fcb42c67944d7fa6671"; // Your API key here
//            String urlString = "http://api.openweathermap.org/data/2.5/weather?q=" + city + "&appid=" + apiKey + "&units=metric";
//            HttpURLConnection conn = (HttpURLConnection) new URL(urlString).openConnection();
//            conn.setRequestMethod("GET");
//
//            // Read the response
//            Scanner scanner = new Scanner(conn.getInputStream());
//            StringBuilder response = new StringBuilder();
//            while (scanner.hasNext()) {
//                response.append(scanner.nextLine());
//            }
//            scanner.close();
//
//            // Parse the JSON response
//            JSONObject json = new JSONObject(response.toString());
//            double temperature = json.getJSONObject("main").getDouble("temp");
//            int humidity = json.getJSONObject("main").getInt("humidity");
//
//            // Update UI with fetched data
//            temperatureLabel.setText("Temperature: " + temperature + "¬∞C");
//            humidityLabel.setText("Humidity: " + humidity + "%");
//
//            // Update charts with the new data
//            updateCharts(city, temperature, humidity);
//        } catch (IOException e) {
//            temperatureLabel.setText("Error fetching data");
//            e.printStackTrace();
//        }
//    }
//
//    private void updateCharts(String city, double temperature, int humidity) {
//        // Update the bar chart with the current temperature and humidity
//        XYChart.Series<String, Number> series = new XYChart.Series<>();
//        series.setName(city);
//        series.getData().add(new XYChart.Data<>("Temperature", temperature));
//        series.getData().add(new XYChart.Data<>("Humidity", humidity));
//        barChart.getData().clear();
//        barChart.getData().add(series);
//
//        // Update the line chart with the temperature trend
//        XYChart.Series<Number, Number> lineSeries = new XYChart.Series<>();
//        lineSeries.setName(city);
//        lineSeries.getData().add(new XYChart.Data<>(System.currentTimeMillis(), temperature));
//        lineChart.getData().clear();
//        lineChart.getData().add(lineSeries);
//    }
//
//    public static void main(String[] args) {
//        launch(args);
//    }
//}


//package com.example.weather.ui;
//
//import javafx.application.Application;
//import javafx.geometry.Insets;
//import javafx.scene.Scene;
//import javafx.scene.chart.*;
//import javafx.scene.control.*;
//import javafx.scene.layout.VBox;
//import javafx.stage.Stage;
//import org.json.JSONObject;
//import java.io.IOException;
//import java.net.HttpURLConnection;
//import java.net.URL;
//import java.util.Scanner;
//
//public class WeatherMonitoringUI extends Application {
//    private ComboBox<String> citySelector;
//    private Label temperatureLabel;
//    private Label humidityLabel;
//    private BarChart<String, Number> barChart;
//    private LineChart<Number, Number> lineChart;
//    
//    @Override
//    public void start(Stage primaryStage) {
//        citySelector = new ComboBox<>();
//        citySelector.getItems().addAll("New York", "London", "Tokyo", "Mumbai", "Sydney");
//        citySelector.setValue("New York");
//        Button fetchButton = new Button("Fetch Weather");
//        fetchButton.setOnAction(e -> fetchWeatherData(citySelector.getValue()));
//        
//        temperatureLabel = new Label("Temperature: --");
//        humidityLabel = new Label("Humidity: --");
//        
//        CategoryAxis xAxis = new CategoryAxis();
//        NumberAxis yAxis = new NumberAxis();
//        barChart = new BarChart<>(xAxis, yAxis);
//        barChart.setTitle("Weather Data");
//        
//        NumberAxis lineXAxis = new NumberAxis();
//        NumberAxis lineYAxis = new NumberAxis();
//        lineChart = new LineChart<>(lineXAxis, lineYAxis);
//        lineChart.setTitle("Temperature Trends");
//        
//        VBox layout = new VBox(10, citySelector, fetchButton, temperatureLabel, humidityLabel, barChart, lineChart);
//        layout.setPadding(new Insets(10));
//        primaryStage.setScene(new Scene(layout, 600, 500));
//        primaryStage.setTitle("Weather Monitoring System");
//        primaryStage.show();
//        
//        fetchWeatherData(citySelector.getValue());
//    }
//    
//    private void fetchWeatherData(String city) {
//        try {
//            String apiKey = "6e1a202fdcb54fcb42c67944d7fa6671";
//            String urlString = "http://api.openweathermap.org/data/2.5/weather?q=" + city + "&appid=" + apiKey + "&units=metric";
//            HttpURLConnection conn = (HttpURLConnection) new URL(urlString).openConnection();
//            conn.setRequestMethod("GET");
//            
//            Scanner scanner = new Scanner(conn.getInputStream());
//            StringBuilder response = new StringBuilder();
//            while (scanner.hasNext()) {
//                response.append(scanner.nextLine());
//            }
//            scanner.close();
//            
//            JSONObject json = new JSONObject(response.toString());
//            double temperature = json.getJSONObject("main").getDouble("temp");
//            int humidity = json.getJSONObject("main").getInt("humidity");
//            
//            temperatureLabel.setText("Temperature: " + temperature + "¬∞C");
//            humidityLabel.setText("Humidity: " + humidity + "%");
//            
//            updateCharts(city, temperature, humidity);
//        } catch (IOException e) {
//            temperatureLabel.setText("Error fetching data");
//            humidityLabel.setText("");
//        }
//    }
//    
//    private void updateCharts(String city, double temperature, int humidity) {
//        barChart.getData().clear();
//        XYChart.Series<String, Number> series = new XYChart.Series<>();
//        series.setName(city);
//        series.getData().add(new XYChart.Data<>("Temperature", temperature));
//        series.getData().add(new XYChart.Data<>("Humidity", humidity));
//        barChart.getData().add(series);
//        
//        lineChart.getData().clear();
//        XYChart.Series<Number, Number> tempSeries = new XYChart.Series<>();
//        tempSeries.setName("Temperature Trend");
//        for (int i = 1; i <= 5; i++) {
//            tempSeries.getData().add(new XYChart.Data<>(i, temperature + Math.random() * 2 - 1));
//        }
//        lineChart.getData().add(tempSeries);
//    }
//    
//    public static void main(String[] args) {
//        launch(args);
//    }
//}

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.scene.Scene;
import javafx.scene.chart.*;
import javafx.scene.control.*;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
import org.json.JSONObject;
import org.apache.kafka.clients.consumer.ConsumerConfig;
import org.apache.kafka.clients.consumer.ConsumerRecords;
import org.apache.kafka.clients.consumer.KafkaConsumer;
import org.apache.kafka.clients.consumer.ConsumerRecord;

import java.time.Duration;
import java.util.Collections;
import java.util.Properties;

public class WeatherMonitoringUI extends Application {
    private ComboBox<String> citySelector;
    private Label temperatureLabel;
    private Label humidityLabel;
    private BarChart<String, Number> barChart;
    private LineChart<Number, Number> lineChart;
    
    @Override
    public void start(Stage primaryStage) {
        citySelector = new ComboBox<>();
        citySelector.getItems().addAll("New York", "London", "Tokyo", "Mumbai", "Sydney");
        citySelector.setValue("New York");
        Button fetchButton = new Button("Fetch Weather");
        fetchButton.setOnAction(e -> fetchWeatherData(citySelector.getValue()));
        
        temperatureLabel = new Label("Temperature: --");
        humidityLabel = new Label("Humidity: --");
        
        CategoryAxis xAxis = new CategoryAxis();
        NumberAxis yAxis = new NumberAxis();
        barChart = new BarChart<>(xAxis, yAxis);
        barChart.setTitle("Weather Data");
        
        NumberAxis lineXAxis = new NumberAxis();
        NumberAxis lineYAxis = new NumberAxis();
        lineChart = new LineChart<>(lineXAxis, lineYAxis);
        lineChart.setTitle("Temperature Trends");
        
        VBox layout = new VBox(10, citySelector, fetchButton, temperatureLabel, humidityLabel, barChart, lineChart);
        layout.setPadding(new Insets(10));
        primaryStage.setScene(new Scene(layout, 600, 500));
        primaryStage.setTitle("Weather Monitoring System");
        primaryStage.show();
        
        // You can call fetchWeatherData here if you want to fetch data on app start
        fetchWeatherData(citySelector.getValue());
    }
    
    private void fetchWeatherData(String city) {
        Properties props = new Properties();
        props.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, "localhost:9092");
        props.put(ConsumerConfig.GROUP_ID_CONFIG, "weather-group");
        props.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, "org.apache.kafka.common.serialization.StringDeserializer");
        props.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, "org.apache.kafka.common.serialization.StringDeserializer");

        KafkaConsumer<String, String> consumer = new KafkaConsumer<>(props);
        consumer.subscribe(Collections.singletonList("weather-data"));

        ConsumerRecords<String, String> records = consumer.poll(Duration.ofSeconds(5));

        for (ConsumerRecord<String, String> record : records) {
            JSONObject json = new JSONObject(record.value());
            double temperature = json.getJSONObject("main").getDouble("temp");
            int humidity = json.getJSONObject("main").getInt("humidity");

            temperatureLabel.setText("Temperature: " + temperature + "¬∞C");
            humidityLabel.setText("Humidity: " + humidity + "%");

            updateCharts(city, temperature, humidity);
        }
        consumer.close();
    }

    private void updateCharts(String city, double temperature, int humidity) {
        // Update Bar Chart
        barChart.getData().clear();
        XYChart.Series<String, Number> series = new XYChart.Series<>();
        series.setName(city);
        series.getData().add(new XYChart.Data<>("Temperature", temperature));
        series.getData().add(new XYChart.Data<>("Humidity", humidity));
        barChart.getData().add(series);

        // Update Line Chart
        lineChart.getData().clear();
        XYChart.Series<Number, Number> tempSeries = new XYChart.Series<>();
        tempSeries.setName("Temperature Trend");
        for (int i = 1; i <= 5; i++) {
            tempSeries.getData().add(new XYChart.Data<>(i, temperature + Math.random() * 2 - 1));
        }
        lineChart.getData().add(tempSeries);
    }
    
    public static void main(String[] args) {
        launch(args);
    }
}



