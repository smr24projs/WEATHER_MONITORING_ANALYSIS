//package com.example.weather.ui;
//
//import javafx.application.Application;
//import javafx.scene.Scene;
//import javafx.scene.control.Label;
//import javafx.scene.layout.VBox;
//import javafx.stage.Stage;
//
//public class WeatherMonitoringUI extends Application {
//
//    @Override
//    public void start(Stage primaryStage) {
//        VBox root = new VBox();
//        root.getChildren().add(new Label("üå§ Welcome to the Weather Monitoring System!"));
//
//        Scene scene = new Scene(root, 400, 300);
//        primaryStage.setTitle("Weather Monitoring System");
//        primaryStage.setScene(scene);
//        primaryStage.show();
//    }
//
//    public static void main(String[] args) {
//        launch(args);
//    }
//}

//package com.example.weather.ui;
//
//import javafx.application.Application;
//import javafx.application.Platform;
//import javafx.scene.Scene;
//import javafx.scene.chart.LineChart;
//import javafx.scene.chart.NumberAxis;
//import javafx.scene.chart.XYChart;
//import javafx.scene.control.Button;
//import javafx.scene.control.Label;
//import javafx.scene.layout.VBox;
//import javafx.stage.Stage;
//import org.json.JSONObject;
//
//import java.io.BufferedReader;
//import java.io.InputStreamReader;
//import java.net.HttpURLConnection;
//import java.net.URL;
//import java.util.Timer;
//import java.util.TimerTask;
//
//public class WeatherMonitoringUI extends Application {
//
//    private Label weatherLabel;
//    private XYChart.Series<Number, Number> temperatureSeries;
//    private int timeCounter = 0;  // X-axis time counter
//
//    @Override
//    public void start(Stage primaryStage) {
//        VBox root = new VBox();
//
//        // Weather Label
//        weatherLabel = new Label("üå§ Weather data will appear here...");
//
//        // Refresh Button
//        Button refreshButton = new Button("Refresh Weather");
//        refreshButton.setOnAction(e -> fetchWeatherData());
//
//        // Temperature Chart
//        NumberAxis xAxis = new NumberAxis();
//        NumberAxis yAxis = new NumberAxis();
//        xAxis.setLabel("Time (seconds)");
//        yAxis.setLabel("Temperature (¬∞C)");
//
//        LineChart<Number, Number> temperatureChart = new LineChart<>(xAxis, yAxis);
//        temperatureChart.setTitle("Temperature Trend");
//
//        temperatureSeries = new XYChart.Series<>();
//        temperatureSeries.setName("Temperature");
//        temperatureChart.getData().add(temperatureSeries);
//
//        root.getChildren().addAll(weatherLabel, refreshButton, temperatureChart);
//
//        Scene scene = new Scene(root, 600, 400);
//        primaryStage.setTitle("Weather Monitoring System");
//        primaryStage.setScene(scene);
//        primaryStage.show();
//
//        // Start fetching weather data automatically every 5 seconds
//        startRealTimeUpdates();
//    }
//
//    private void fetchWeatherData() {
//        new Thread(() -> {
//            try {
//                String apiUrl = "http://localhost:8080/weather";  // Change this to your actual API endpoint
//                URL url = new URL(apiUrl);
//                HttpURLConnection conn = (HttpURLConnection) url.openConnection();
//                conn.setRequestMethod("GET");
//
//                BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
//                StringBuilder response = new StringBuilder();
//                String line;
//
//                while ((line = reader.readLine()) != null) {
//                    response.append(line);
//                }
//                reader.close();
//
//                // Parse JSON response
//                JSONObject json = new JSONObject(response.toString());
//                String temperature = json.getString("temperature");
//                String humidity = json.getString("humidity");
//                double tempValue = Double.parseDouble(temperature);
//
//                // Update UI
//                Platform.runLater(() -> {
//                    weatherLabel.setText("üå° Temperature: " + temperature + "¬∞C\nüíß Humidity: " + humidity + "%");
//                    updateChart(tempValue);
//                });
//
//            } catch (Exception e) {
//                e.printStackTrace();
//                Platform.runLater(() -> weatherLabel.setText("‚ö† Error fetching weather data!"));
//            }
//        }).start();
//    }
//
//    private void updateChart(double temperature) {
//        if (temperatureSeries.getData().size() > 20) {
//            temperatureSeries.getData().remove(0); // Keep only the last 20 data points
//        }
//        temperatureSeries.getData().add(new XYChart.Data<>(timeCounter++, temperature));
//    }
//
//    private void startRealTimeUpdates() {
//        Timer timer = new Timer();
//        timer.scheduleAtFixedRate(new TimerTask() {
//            @Override
//            public void run() {
//                fetchWeatherData();
//            }
//        }, 0, 5000);  // Fetch data every 5 seconds
//    }
//
//    public static void main(String[] args) {
//        launch(args);
//    }
//}



//package com.example.weather.ui;
//
//import javafx.application.Application;
//import javafx.application.Platform;
//import javafx.scene.Scene;
//import javafx.scene.control.Label;
//import javafx.scene.control.Button;
//import javafx.scene.layout.VBox;
//import javafx.stage.Stage;
//import org.json.JSONObject;
//import java.io.BufferedReader;
//import java.io.InputStreamReader;
//import java.net.HttpURLConnection;
//import java.net.URL;
//import org.json.JSONObject;
//import java.io.BufferedReader;
//import java.io.InputStreamReader;
//import java.net.HttpURLConnection;
//import java.net.URL;
//import javafx.geometry.Pos;
//
//
//public class WeatherMonitoringUI extends Application {
//
//    private static final String API_KEY = "6e1a202fdcb54fcb42c67944d7fa6671"; // Replace with your API key
//    private static final String CITY = "Pune"; // Change to your preferred city
//    private static final String API_URL = "https://api.openweathermap.org/data/2.5/weather?q=" + CITY + "&appid=" + API_KEY + "&units=metric";
//
//    private Label weatherLabel;
//
//    @Override
//    public void start(Stage primaryStage) {
//        weatherLabel = new Label("Fetching weather data...");
//        Button refreshButton = new Button("Refresh Weather");
//        refreshButton.setOnAction(e -> fetchWeatherData());
//
//        VBox root = new VBox(10, weatherLabel, refreshButton);
//        root.setAlignment(Pos.CENTER);
//        Scene scene = new Scene(root, 400, 300);
//        primaryStage.setTitle("Weather Monitoring System");
//        primaryStage.setScene(scene);
//        primaryStage.show();
//
//        fetchWeatherData(); // Fetch on startup
//    }
//
//    private void fetchWeatherData() {
//        new Thread(() -> {
//            try {
//                URL url = new URL(API_URL);
//                HttpURLConnection conn = (HttpURLConnection) url.openConnection();
//                conn.setRequestMethod("GET");
//
//                BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
//                StringBuilder response = new StringBuilder();
//                String line;
//                while ((line = reader.readLine()) != null) {
//                    response.append(line);
//                }
//                reader.close();
//
//                JSONObject json = new JSONObject(response.toString());
//                String weatherDescription = json.getJSONArray("weather").getJSONObject(0).getString("description");
//                double temperature = json.getJSONObject("main").getDouble("temp");
//
//                Platform.runLater(() -> weatherLabel.setText("üå§ " + CITY + ": " + temperature + "¬∞C, " + weatherDescription));
//
//            } catch (Exception e) {
//                e.printStackTrace();
//                Platform.runLater(() -> weatherLabel.setText("‚ö†Ô∏è Error fetching weather data!"));
//            }
//        }).start();
//    }
//
//    public static void main(String[] args) {
//        launch(args);
//    }
//}
//


package com.example.weather.ui;

import javafx.application.Application;
import javafx.application.Platform;
import javafx.scene.Scene;
import javafx.scene.chart.LineChart;
import javafx.scene.chart.NumberAxis;
import javafx.scene.chart.XYChart;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.concurrent.atomic.AtomicInteger;

public class WeatherMonitoringUI extends Application {

    private Label tempLabel = new Label("Temperature: Loading...");
    private Label humidityLabel = new Label("Humidity: Loading...");
    private Label windSpeedLabel = new Label("Wind Speed: Loading...");
    private XYChart.Series<Number, Number> tempSeries = new XYChart.Series<>();
    private AtomicInteger timeStep = new AtomicInteger(0);

    @Override
    public void start(Stage primaryStage) {
        VBox root = new VBox(10);

        // Weather Data Labels
        root.getChildren().addAll(tempLabel, humidityLabel, windSpeedLabel);

        // Fetch Data Button
        Button fetchWeatherButton = new Button("Fetch Weather Data");
        fetchWeatherButton.setOnAction(e -> fetchWeatherData());
        root.getChildren().add(fetchWeatherButton);

        // Line Chart for Temperature Trends
        NumberAxis xAxis = new NumberAxis();
        NumberAxis yAxis = new NumberAxis();
        xAxis.setLabel("Time");
        yAxis.setLabel("Temperature (¬∞C)");
        LineChart<Number, Number> tempChart = new LineChart<>(xAxis, yAxis);
        tempSeries.setName("Temperature Trend");
        tempChart.getData().add(tempSeries);
        root.getChildren().add(tempChart);

        // Set Scene
        Scene scene = new Scene(root, 500, 400);
        primaryStage.setTitle("Weather Monitoring System");
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    private void fetchWeatherData() {
        new Thread(() -> {
            try {
                // Replace with your OpenWeatherMap API key
                String apiKey = "YOUR_API_KEY";
                String city = "Mumbai"; // Change to your preferred location
                String urlString = "https://api.openweathermap.org/data/2.5/weather?q=" + city + "&appid=" + apiKey + "&units=metric";

                URL url = new URL(urlString);
                HttpURLConnection conn = (HttpURLConnection) url.openConnection();
                conn.setRequestMethod("GET");

                BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
                StringBuilder response = new StringBuilder();
                String line;
                while ((line = reader.readLine()) != null) {
                    response.append(line);
                }
                reader.close();

                // Parse JSON Response
                JSONObject jsonResponse = new JSONObject(response.toString());
                double temperature = jsonResponse.getJSONObject("main").getDouble("temp");
                int humidity = jsonResponse.getJSONObject("main").getInt("humidity");
                double windSpeed = jsonResponse.getJSONObject("wind").getDouble("speed");

                // Update UI on JavaFX Thread
                Platform.runLater(() -> {
                    tempLabel.setText("Temperature: " + temperature + "¬∞C");
                    humidityLabel.setText("Humidity: " + humidity + "%");
                    windSpeedLabel.setText("Wind Speed: " + windSpeed + " m/s");

                    // Add Data to Chart
                    tempSeries.getData().add(new XYChart.Data<>(timeStep.incrementAndGet(), temperature));
                });

            } catch (Exception e) {
                e.printStackTrace();
                Platform.runLater(() -> tempLabel.setText("Error fetching data!"));
            }
        }).start();
    }

    public static void main(String[] args) {
        launch(args);
    }
}

